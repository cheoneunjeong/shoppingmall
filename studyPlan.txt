category: "ACC(3)"
caution: "상세페이지 참고"
code: 2
descr: "우신사스토어"
detail_desc: "사진출처 우신사스토어"
file_list: Array(2)
0: "키링.jpg"
1: "키링디테일.jpg"
length: 2
__ob__: Observer {value: Array(2), dep: Dep, vmCount: 0}
[[Prototype]]: Array
filesname: "키링.jpg,키링디테일.jpg"
mainCategory: "3"
mainPhoto: "키링.jpg"
manufacturer: "상세페이지 참고"
material: "상세페이지 참고"
name: "래빗키링"
options: Array(1)
0:
num: 83
option: "옵션없음"
p_code: 2
__ob__: Observer {value: {…}, dep: Dep, vmCount: 0}
get num: ƒ reactiveGetter()
set num: ƒ reactiveSetter(newVal)
get option: ƒ reactiveGetter()
set option: ƒ reactiveSetter(newVal)
get p_code: ƒ reactiveGetter()
set p_code: ƒ reactiveSetter(newVal)
[[Prototype]]: Object
length: 1
__ob__: Observer {value: Array(1), dep: Dep, vmCount: 0}
[[Prototype]]: Array
point: "구매가기준 설정비율"
price: 20000
sale: true
shipping: "쇼핑몰 기본설정 사용"
size: "상세페이지 참고"
stock: 20
type: Array(2)
0: "hit"
1: "new"
length: 2
__ob__: Observer {value: Array(2), dep: Dep, vmCount: 0}
[[Prototype]]: Array
type_s: "hit,new"

******쇼핑몰페이지****
-위시클래스삭제
-찜했을때 하트체크
-장바구니....위시리스트로 그냥하자.. ->페이지만들기
-상위재고 표시
-구매 ->주문내역리스트 + 재고자동차감 -재고 0이면 자동으로 판매설정
-별점(생략..?)
-게시판(문의, 후기 등)
-통계
-상품 타입별 색다르게해서 표시



****나중에할거
-주문내역리스트 만들어서 마이페이지에 뿌리기
-사이드메뉴만들기


***질문할거
-상품삭제시 asstes사진삭제는??
------------------------------------------

디비설계 
 +erd 만들어보기
 + 상품(탑)(100)>블라우스(100+1) 이런식 부모자식관계
DB공부 -> https://gngsn.tistory.com/29?category=851218
erd생성-> https://xively.tistory.com/38

로그인, 결제 ->카카오페이 개발자 api검색해서 연동



-----------------------------------------------------------------------------------------------------------

*질문할거List
       restful api라는게 프론트단에서 서버로 요청할때 쓰이는 uri에 규칙을 준수해서 쓴거?
	mapper 1+1쓰는이유

*서치해볼거
	vue.config.js
	logger, logback-spring.xml
	securty강의
	serialVersionUID
	Map, Hashmap, 람다식 좀 더 공부
@autowrited/@Bean차이
아스키코드 byte 캐릴터타입일때만아스키코드


restful?
rest) api server?
jwt?

rest api server와 vue.js의 clientfh 게시판 구현 후,
프로젝트(보통 쇼핑몰)

*원래는 tomcat(was)에 java(spring)을 올리면 client에서 요청시 html(jsp)을 만들어서 전송(stereotype)
rest api server는 tomcat에 java를 올리면 client요청시 json으로 데이타전송
그럼 client쪽은 browser말고도 android, io, 기타전자기기 등 모든 곳에 데이터 사용가능! 그쪽에 맞게 데이터 변형해서 사용
browser은 jquery로 바꿔서 사용하는데, 노가다 단점보완하고자 동적실행 가능한 vue.js/react등 사용*

